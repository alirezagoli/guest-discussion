/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ir.ac.iut.sccportal.guestdiscussion.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Comment service. Represents a row in the &quot;GDP_Comment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ir.ac.iut.sccportal.guestdiscussion.model.impl.CommentModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ir.ac.iut.sccportal.guestdiscussion.model.impl.CommentImpl}.
 * </p>
 *
 * @author Alireza
 * @see Comment
 * @see ir.ac.iut.sccportal.guestdiscussion.model.impl.CommentImpl
 * @see ir.ac.iut.sccportal.guestdiscussion.model.impl.CommentModelImpl
 * @generated
 */
public interface CommentModel extends BaseModel<Comment> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a comment model instance should use the {@link Comment} interface instead.
	 */

	/**
	 * Returns the primary key of this comment.
	 *
	 * @return the primary key of this comment
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this comment.
	 *
	 * @param primaryKey the primary key of this comment
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the comment ID of this comment.
	 *
	 * @return the comment ID of this comment
	 */
	public long getCommentId();

	/**
	 * Sets the comment ID of this comment.
	 *
	 * @param commentId the comment ID of this comment
	 */
	public void setCommentId(long commentId);

	/**
	 * Returns the group ID of this comment.
	 *
	 * @return the group ID of this comment
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this comment.
	 *
	 * @param groupId the group ID of this comment
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this comment.
	 *
	 * @return the company ID of this comment
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this comment.
	 *
	 * @param companyId the company ID of this comment
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the modified date of this comment.
	 *
	 * @return the modified date of this comment
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this comment.
	 *
	 * @param modifiedDate the modified date of this comment
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the parent ID of this comment.
	 *
	 * @return the parent ID of this comment
	 */
	public long getParentId();

	/**
	 * Sets the parent ID of this comment.
	 *
	 * @param parentId the parent ID of this comment
	 */
	public void setParentId(long parentId);

	/**
	 * Returns the parent name of this comment.
	 *
	 * @return the parent name of this comment
	 */
	@AutoEscape
	public String getParentName();

	/**
	 * Sets the parent name of this comment.
	 *
	 * @param parentName the parent name of this comment
	 */
	public void setParentName(String parentName);

	/**
	 * Returns the comment text of this comment.
	 *
	 * @return the comment text of this comment
	 */
	@AutoEscape
	public String getCommentText();

	/**
	 * Sets the comment text of this comment.
	 *
	 * @param commentText the comment text of this comment
	 */
	public void setCommentText(String commentText);

	/**
	 * Returns the guest name of this comment.
	 *
	 * @return the guest name of this comment
	 */
	@AutoEscape
	public String getGuestName();

	/**
	 * Sets the guest name of this comment.
	 *
	 * @param guestName the guest name of this comment
	 */
	public void setGuestName(String guestName);

	/**
	 * Returns the guest email address of this comment.
	 *
	 * @return the guest email address of this comment
	 */
	@AutoEscape
	public String getGuestEmailAddress();

	/**
	 * Sets the guest email address of this comment.
	 *
	 * @param guestEmailAddress the guest email address of this comment
	 */
	public void setGuestEmailAddress(String guestEmailAddress);

	/**
	 * Returns the guest email notification of this comment.
	 *
	 * @return the guest email notification of this comment
	 */
	public boolean getGuestEmailNotification();

	/**
	 * Returns <code>true</code> if this comment is guest email notification.
	 *
	 * @return <code>true</code> if this comment is guest email notification; <code>false</code> otherwise
	 */
	public boolean isGuestEmailNotification();

	/**
	 * Sets whether this comment is guest email notification.
	 *
	 * @param guestEmailNotification the guest email notification of this comment
	 */
	public void setGuestEmailNotification(boolean guestEmailNotification);

	/**
	 * Returns the like count of this comment.
	 *
	 * @return the like count of this comment
	 */
	public long getLikeCount();

	/**
	 * Sets the like count of this comment.
	 *
	 * @param likeCount the like count of this comment
	 */
	public void setLikeCount(long likeCount);

	/**
	 * Returns the dislike count of this comment.
	 *
	 * @return the dislike count of this comment
	 */
	public long getDislikeCount();

	/**
	 * Sets the dislike count of this comment.
	 *
	 * @param dislikeCount the dislike count of this comment
	 */
	public void setDislikeCount(long dislikeCount);

	/**
	 * Returns the title ID of this comment.
	 *
	 * @return the title ID of this comment
	 */
	public long getTitleId();

	/**
	 * Sets the title ID of this comment.
	 *
	 * @param titleId the title ID of this comment
	 */
	public void setTitleId(long titleId);

	/**
	 * Returns the verified of this comment.
	 *
	 * @return the verified of this comment
	 */
	public boolean getVerified();

	/**
	 * Returns <code>true</code> if this comment is verified.
	 *
	 * @return <code>true</code> if this comment is verified; <code>false</code> otherwise
	 */
	public boolean isVerified();

	/**
	 * Sets whether this comment is verified.
	 *
	 * @param verified the verified of this comment
	 */
	public void setVerified(boolean verified);

	/**
	 * Returns the has answer of this comment.
	 *
	 * @return the has answer of this comment
	 */
	public boolean getHasAnswer();

	/**
	 * Returns <code>true</code> if this comment is has answer.
	 *
	 * @return <code>true</code> if this comment is has answer; <code>false</code> otherwise
	 */
	public boolean isHasAnswer();

	/**
	 * Sets whether this comment is has answer.
	 *
	 * @param hasAnswer the has answer of this comment
	 */
	public void setHasAnswer(boolean hasAnswer);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		ir.ac.iut.sccportal.guestdiscussion.model.Comment comment);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ir.ac.iut.sccportal.guestdiscussion.model.Comment> toCacheModel();

	@Override
	public ir.ac.iut.sccportal.guestdiscussion.model.Comment toEscapedModel();

	@Override
	public ir.ac.iut.sccportal.guestdiscussion.model.Comment toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}